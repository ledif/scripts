#!/bin/bash

sumtree() {
  s=`ps -o rss --no-headers $1`
 
  for c in $(ps -o pid --no-headers --ppid ${1}); do
    sz=`sumtree $c`
    s=$((sz+s))
  done

  echo $s
}

killtree() {
  kill -9 $1
 
  for c in $(ps -o pid --no-headers --ppid ${1}); do
    killtree $c
  done
}

on_exit() {
  echo "Cleaning up pid $pid."
  killtree $pid
  exit 1
}

format_mb() {
  echo $(echo "scale=2; $1/1024" | bc -l)
}

clear_lines() {
  echo -ne "                         \n"
  echo -ne "                         \n"
  echo -e "\033[3A"
}


file=$1
if [[ $file == *.cc ]]; then
  file=${file//.cc/}
fi

if [ -e $file ]; then
  rm $file
fi

time exec gmake $file >& .error.stapl &

pid=$!
t=""
peak_rss=0

trap on_exit SIGINT SIGTERM

while kill -0 $pid > /dev/null 2&>1
do
  rss=`sumtree $pid`
  mb=`format_mb $rss`
  peak_mb=`format_mb $peak_rss`
  tx=`ps -p $pid -o etime= | tr -d ' '`

  if [ -n "$tx" ]; then
    t=$tx
  fi

  if [ -n "$rss" ]; then
    if [ $rss -gt $peak_rss ]; then
      peak_rss=$rss
    fi
  fi

  clear_lines

  echo -ne "     $t\n"
#  echo -ne "     $mb mb\n"
  echo -ne "     $peak_mb mb\n"

  echo -e "\033[3A"

  usleep 250

done

clear_lines
peak_mb=`format_mb $peak_rss`
echo -ne "     $t\n"
echo -ne "     peak: $peak_mb mb\n"

count=$(egrep -c -i "(fail|error:)" .error.stapl)
if [ $count -gt "0" ] ; then
  vim .error.stapl
fi
